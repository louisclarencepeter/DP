@use "sass:color";
@use "../styles/variables" as vars;

/* Flex Center Mixin */
@mixin flex-center($justify: center, $align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

/* Fade-in Animation Mixin */
@mixin fade-in-up() {
  animation: fadeInUp 0.5s ease-in-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Media Query Mixin */
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: vars.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: vars.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) {
      @content;
    }
  }
}

/* Screen Reader Only Mixin */
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Responsive Font Size Mixin */
@mixin responsive-font-size {
  font-size: calc(0.8rem + 0.5vw);

  @include respond-to(lg) {
    font-size: inherit;
  }

  @include respond-to(md) {
    font-size: 0.8rem;

    @include respond-to(lg) {
      font-size: 1rem;
    }
  }
}

/* Responsive Layout Mixin */
@mixin responsive-layout {
  @media screen and (min-height: 1079px),
    screen and (min-width: vars.$breakpoint-md),
    screen and (min-width: 1279px),
    screen and (min-width: 1439px),
    screen and (min-width: 1727px) {
    .nav {
      height: 4rem;
      padding: 0;

      .store button {
        font-size: 0.6rem;
        margin-left: 0.4rem;
      }

      .menu__logo {
        height: 1rem;
      }

      .classic-menu ul {
        gap: 0.1rem;
      }

      .menu__item {
        font-size: 0.8rem;

        @include respond-to(lg) {
          font-size: 1rem;
        }

        @include respond-to(1727px) {
          font-size: 1.2rem;
        }
      }
    }
  }
}

/* Button Styles Mixin */
@mixin button-styles {
  border-radius: vars.$border-radius-default;
  padding: 0.5rem 1rem;
  font-size: calc(0.6rem + 0.5vw);
  background-image: vars.$gradient-button;
  color: vars.$color-background;
  border: none;
  font-family: vars.$font-primary;
  cursor: pointer;
  transition: vars.$transition-default;

  @include respond-to(sm) {
    padding: 0.6rem 1.2rem;
    font-size: calc(0.4rem + 1.5vw);
  }

  &:hover {
    color: vars.$hover-color;
    background-image: vars.$gradient-hover;
  }
}

/* Compact Button Styles Mixin */
@mixin button-styles-compact {
  @include button-styles;

  & {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
  }
}

@mixin customScrollbar($thumb-color: rgba(0, 0, 0, 0.3), $track-color: transparent) {
  // Basic overflow behavior
  
  // WebKit scrollbar styles
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: 3px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: 3px;
    
    &:hover {
      background-color: color.adjust($thumb-color, $lightness: -10%);
    }
  }

  // Standard scrollbar properties for future compatibility
  @supports (scrollbar-width: thin) {
    scrollbar-width: thin;
    scrollbar-color: $thumb-color $track-color;
  }
}